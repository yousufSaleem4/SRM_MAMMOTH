@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@model PlusCP.Models.cAuth
@{
    ViewBag.Title = "Login";
    Layout = null;
}


<script src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="style.css">
<link href="~/Content/css/message.css" rel="stylesheet" />

<style>
    /* Global Variables */
    /*:root {
        --color1: #f5f5f54d;
        --color2: #526470;
        --color2Hover: #013e63;
        --color3: #fff;
        --color4: #015981eb;
        --color5: #b2bec5c2;
    }*/

    /* Reset Default Settings */
    /** {
        box-sizing: border-box;
        margin: 0;
    }

    body {
        background-color: #c8dae9;
        min-height: 100vh;
        font-family: 'Montserrat', sans-serif;*/
    /* Flex */
    /*display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        background-color: var(--color3);
        width: 750px;
        height: 450px;
        border-radius: 60px;
        overflow: hidden;*/
    /* Flex */
    /*display: flex;
        padding-left: 0px !important;
    }

    .container__svgs {
        background-color: #002244;
        width: 50%;*/
    /* Flex */
    /*display: flex;*/
    /*        flex-direction: column;*/
    /*justify-content: center;
        align-items: center;
        border-radius: 60px !important;
    }

    .container__svg1 {
        width: 200px;
        height: 200px;
        margin-bottom: 10px;
    }

    .container__svg2 {
        width: 170px;
        height: 18px;
    }

    .container__content {
        width: 50%;
        position: relative;*/
    /* Flex */
    /*display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .container__form {
        margin-bottom: 15px;*/
    /* Flex */
    /*display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .container__inputField {
        background-color: transparent;
        width: 220px;
        padding: 0 0 10px 5px;
        font-size: 15px;
        letter-spacing: 1px;*/
    /* Border */
    /*border: none;
        border-bottom: solid 1px var(--color2);
        border-radius: 0;
    }

        .container__inputField:first-of-type {
            margin-bottom: 35px;
        }

        .container__inputField:nth-of-type(2) {
            margin-bottom: 40px;
        }

        .container__inputField:focus-visible {
            border-bottom: solid 2px var(--color2Hover);
            outline: none;
        }

    .container__sumbitButton {
        background-color: white;
        color: black;
        width: 220px;
        padding: 15px 0;
        font-size: 14px;
        cursor: pointer;*/
    /* Text */
    /*text-transform: uppercase;
        letter-spacing: 1px;*/
    /* Border */
    /*border: none;
        border-radius: 50px;
        margin-top: 10px !important;
    }

    .btn-signin {
        background-color: #c8dae9;
        color: black;
        width: 220px;
        padding: 15px 0;
        font-size: 14px;
        cursor: pointer;*/
    /* Text */
    /*text-transform: uppercase;
        letter-spacing: 1px;*/
    /* Border */
    /*border: none;
        border-radius: 50px;
        margin-top: 10px !important;
    }

        .btn-signin:hover {
            background-color: #002244;
            color: white;
        }



    .container__sumbitButton:hover {
        background-color: #c8dae9;

    }

    .container__links {*/
    /* Position */
    /*position: absolute;
        left: 50%;
        bottom: 30px;
        transform: translateX(-50%);*/
    /* Flex */
    /*display: flex;
        align-items: center;
        justify-content: center;
        width: 300px !important;
    }

    .container__link {
        color: var(--color2);
        font-size: 12px;
        text-decoration: none;
    }

        .container__link:hover {
            text-decoration: underline;
        }

    .container__separator {
        background-color: var(--color2);
        width: 1px;
        height: 10px;
        margin: 0 15px;
    }*/

    @@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Montserrat', sans-serif;
    }

    body {
        background-color: #c9d6ff;
        background: linear-gradient(to top, white, #D6EFE8);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        height: 100vh;
    }

    .container {
        background-color: #fff;
        border-radius: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
        position: relative;
        overflow: hidden;
        width: 768px;
        max-width: 100%;
        min-height: 480px;
    }

        .container p {
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.3px;
            margin: 20px 0;
        }

        .container span {
            font-size: 12px;
        }

        .container a {
            color: #333;
            font-size: 13px;
            text-decoration: none;
            margin: 15px 0 10px;
        }

        .container button {
            background-color: #194e69;
            color: #fff;
            font-size: 12px;
            padding: 10px 45px;
            border: 1px solid transparent;
            border-radius: 8px;
            font-weight: 600;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            margin-top: 10px;
            cursor: pointer;
        }

            .container button:hover {
                background-color: transparent; /* Make background transparent on hover */
                border-color: #003B59; /* Dark border color on hover */
                color: #003B59; /* Dark font color on hover */
            }

            .container button.hidden {
                background-color: transparent;
                border-color: #fff;
            }

        .container .user_form {
            background-color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 40px;
            height: 100%;
        }

        .container input {
            background-color: #eee;
            border: none;
            margin: 8px 0;
            padding: 10px 15px;
            font-size: 13px;
            border-radius: 8px;
            width: 100%;
            outline: none;
        }

    .form-container {
        position: absolute;
        top: 0;
        height: 100%;
        transition: all 0.6s ease-in-out;
    }

    .sign-in {
        left: 0;
        width: 50%;
        z-index: 2;
    }

    .container.active .sign-in {
        transform: translateX(100%);
    }

    .sign-up {
        left: 0;
        width: 50%;
        opacity: 0;
        z-index: 1;
        transition: all 0.5s;
    }

    .container.active .sign-up {
        transform: translateX(100%);
        opacity: 1;
        z-index: 5;
        animation: move 0.6s;
    }

    @@keyframes move {
        0%, 49.99% {
            opacity: 0;
            z-index: 1;
        }

        50%, 100% {
            opacity: 1;
            z-index: 5;
        }
    }

    .social-icons {
        margin: 20px 0;
    }

        .social-icons a {
            border: 1px solid #ccc;
            border-radius: 20%;
            display: inline-flex;
            justify-content: center;
            align-items: center;
            margin: 0 3px;
            width: 40px;
            height: 40px;
            transition: all 0.5s;
        }

            .social-icons a:hover {
                scale: 1.3;
                border: 1px solid #000;
            }

    .toggle-container {
        position: absolute;
        top: 0;
        left: 50%;
        width: 50%;
        height: 100%;
        overflow: hidden;
        transition: all 0.6s ease-in-out;
        border-radius: 150px 0 0 100px;
        z-index: 1000;
    }

    .container.active .toggle-container {
        transform: translateX(-100%);
        border-radius: 0 150px 100px 0;
    }

    .toggle {
        background-color: #003B59;
        height: 100%;
        background: linear-gradient(to right, #003B59, #003B59);
        position: relative;
        left: -100%;
        height: 100%;
        width: 200%;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
        color: white;
    }

    .container.active .toggle {
        transform: translateX(50%);
    }

    .toggle-panel {
        position: absolute;
        width: 50%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 30px;
        text-align: center;
        top: 0;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }

    .toggle-left {
        transform: translateX(-200%);
    }

    .container.active .toggle-left {
        transform: translateX(0);
    }

    .toggle-right {
        right: 0;
        transform: translateX(0);
    }

    .container.active .toggle-right {
        transform: translateX(200%);
    }

    select {
        /* styling */
        width: 100%;
        background-color: #eee;
        border: thin solid #eee;
        border-radius: 4px;
        display: inline-block;
        font: inherit;
        line-height: 1.1em;
        padding: 0.5em 3.5em 0.5em 1em;
        /* reset */
        margin: 0;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        -webkit-appearance: none;
        -moz-appearance: none;
        font-family: Nunito, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: 14px;
        margin-top: 8px;
        margin-bottom: 8px;
    }


        /* arrows */

        select.classic {
            background-image: linear-gradient(45deg, transparent 50%, #eee 50%), linear-gradient(135deg, #eee 50%, transparent 50%), linear-gradient(to right, gray, gray);
            background-position: calc(100% - 20px) calc(1em + 2px), calc(100% - 15px) calc(1em + 2px), 100% 0;
            background-size: 5px 5px, 5px 5px, 2.5em 2.5em;
            background-repeat: no-repeat;
        }

            select.classic:focus {
                background-image: linear-gradient(45deg, white 50%, transparent 50%), linear-gradient(135deg, transparent 50%, white 50%), linear-gradient(to right, gray, gray);
                background-position: calc(100% - 15px) 1em, calc(100% - 20px) 1em, 100% 0;
                background-size: 5px 5px, 5px 5px, 2.5em 2.5em;
                background-repeat: no-repeat;
                border-color: grey;
                outline: 0;
            }
</style>
<body>
    @using (Html.BeginForm("Login", "Home"))
    {
        <div style="padding-top:1px; display:none">
            <div class="text-center">
                <a href="#" target="_blank"><img src="~/Content/Images/SRMLogo.png" style=" margin-left:8px;margin-top:6px; height:70px; margin-bottom:3px;" /></a>
            </div>
        </div>


        @*//NewLook*@

        <div class="container" id="container">
            <div class="form-container sign-up">
                <div class="user_form">
                    <h1>Create Account</h1>
                    <div class="social-icons" style="display:none;">
                        <a href="#" class="icon"><i class="fa-brands fa-google-plus-g"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-facebook-f"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-github"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-linkedin-in"></i></a>
                    </div>
                    @*<span>or use your email for registeration</span>*@
                    @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new
                        {
                            @autofocus = "autofocus",
                            @class = "inputField",
                            @placeholder = "FirstName",
                            @id = "FirstName",
                            pattern = "^[a-zA-Z0-9_@.-]+$",
                            oninvalid = "this.setCustomValidity('User is invalid')",
                            oninput = "this.setCustomValidity('')"
                        })

                    @Html.TextBoxFor(model => model.LastName, htmlAttributes: new
               {
                   @autofocus = "autofocus",
                   @class = "inputField",
                   @placeholder = "LastName",
                   @id = "LastName",
                   pattern = "^[a-zA-Z0-9_@.-]+$",
                   oninvalid = "this.setCustomValidity('User is invalid')",
                   oninput = "this.setCustomValidity('')"
               })
                    @Html.DropDownListFor(model => model.UserType,
 new SelectList(
     new[]
     {
         new { Value = "Buyer", Text = "Buyer" }


     },
     "Value",
     "Text"),
 "Select User Type",
 new
 {
     @class = "inputField classic",
     @id = "UserType"

 })
                    @Html.EditorFor(model => model.BuyerEmail, new
             {
                 htmlAttributes = new
                 {
                     @class = "inputField",
                     @placeholder = "Buyer Email",
                     @id = "BuyerEmail",
                     @style = "display: none;"
                 }
             })

                    @Html.EditorFor(model => model.EmailAddress, new
                    {
                        htmlAttributes = new
                        {
                            @class = "inputField",
                            @placeholder = "Email",
                            @id = "email",
                            pattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                            oninvalid = "this.setCustomValidity('Email is invalid')",
                            oninput = "this.setCustomValidity('')"
                        }
                    })


                    @Html.PasswordFor(model => model.Pwd, htmlAttributes: new
                        {
                        @autofocus = "autofocus",
                        @class = "inputField",
                        @placeholder = "Password",
                        @id = "Pwd",
                        pattern = "^[a-zA-Z0-9_@.-]+$",
                        oninvalid = "this.setCustomValidity('Password is invalid')",
                        oninput = "this.setCustomValidity('')"
                        })
                    @*@Html.PasswordFor(model => model.Password, new { @class = "inputField", @placeholder = "Password", @id = "Pwd" })*@
                    @* @Html.ValidationMessageFor(model => model.Password)*@


                    @Html.PasswordFor(model => model.Pwd, htmlAttributes: new { @class = "form-control", @placeholder = "Confirm Password", @id = "CnfrmPwd" })
                    @Html.ValidationMessageFor(model => model.Password)
                    <button id="Signup">Sign Up</button>
                </div>
            </div>
            <div class="form-container sign-in">
                <div class="user_form">
                    @*<h1>Sign In</h1>*@
                    <div class="social-icons" style="display:none;">
                        <a href="#" class="icon"><i class="fa-brands fa-google-plus-g"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-facebook-f"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-github"></i></a>
                        <a href="#" class="icon"><i class="fa-brands fa-linkedin-in"></i></a>
                    </div>
                    @*<span>or use your Email password</span>*@
                    @*<input type="email" placeholder="Email" id="emailc">*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.TextBoxFor(model => model.SigninId, htmlAttributes: new
               {
                   @autofocus = "autofocus",
                   @class = "inputField",
                   @placeholder = "Email",
                   @id = "txtUserName",
                   pattern = "^[a-zA-Z0-9-_@.]+$",
                   oninvalid = "this.setCustomValidity('User is invalid')",
                   oninput = "this.setCustomValidity('')"
               })
                    @Html.ValidationMessageFor(model => model.SigninId, "", new { @class = "text-danger", @style = "color: red;" })
                    @*<input type="password" placeholder="Password" id="password">*@
                    @Html.PasswordFor(model => model.Password, htmlAttributes: new
                   {
                   @class = "inputField",
                   @placeholder = "Password",
                   @id = "txtPwd"
              })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @style = "color: red;" })

                    <div align="center" style="margin-top: -10px !important;">

                        @Html.Captcha(5)
                        @Html.ValidationMessageFor(model => model.Captcha, "", new { @class = "text-danger", @style = "color: red;" })
                    </div>
                    <a href="javascript:void(0);" id="forgotPasswordLink">→ Forgot Your Password? ←</a>



                    <button id="btnSubmit">Sign In</button>

                   
                </div>
            </div>
            <div class="toggle-container">
                <div class="toggle">
                    <div class="toggle-panel toggle-left">
                        <h1>Welcome Back!</h1>
                        <p>Enter your personal details to use all of site features</p>
                        <button class="hidden" id="login">Sign In</button>
                    </div>
                    <div class="toggle-panel toggle-right">
                        <span style="font-size:30px; font-weight:bold">COLLABLLY<span style="color: #2AAA82; font-size: 30px; font-weight: bold"> | Portal</span></span>
                        <h6 style="font-style:italic; letter-spacing:0px">Laying the groundwork for your procurement success</h6>
                        <button id="register" style="display:none">Sign Up</button>
                        <!-- Version number at the bottom -->
                        <div style="text-align: center; margin-top: 40px; font-size: 14px; color: white;">
                            Collablly(SRM) Version 2.0
                        </div>
                    </div>
                  
                </div>
              
            </div>
        </div>

        @*//Forgot Passoword Modal*@

        <div class="modal bd-example-modal-sm" tabindex="-1" id="myModal" role="dialog" style=" top: 25%; left: 25%; display:none;">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content modal-sm">
                    <div class="header" style="background-color: #002244;
">
                        <button type="button" class="close" data-dismiss="modal" style="color:white;">&times;</button>
                        <h4 class="modal-title" style="color:white;text-align:center;">Forgot Password</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Username:</label>
                            <input type="text" class="form-control" id="namke" placeholder="Enter Username" autofocus="autofocus" />
                        </div>
                        @*<div class="form-group">
                                <label>Vendor Id:</label>
                                <input type="text" class="form-control" id="ProgramId">
                            </div>*@
                    </div>
                    <div class="modal-footer">

                        <button id="btnSend" type="button" class="button" style="background-color: var(--color4);color:white;">Reset Password</button>
                        <button id="btnCancel" data-dismiss="modal" class="cancel btn btn-default">Close</button>
                    </div>
                    <div class="optionMsg" style="text-align:center;height:20px;">
                        <label id="lblMsgEmail" class="optionMsg">
                        </label>
                       
                    </div>
                </div>
            </div>
        </div>

    }
</body>



<script src="~/Scripts/Message.js"></script>
<script>
    document.getElementById('container').addEventListener('keydown', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            document.getElementById('btnSubmit').click();
        }
    });
    function MsgToast(msg, title, type) {

            toastr.options = {
                closeButton: true,
                debug: false,
                newestOnTop: false,
                progressBar: true,
                positionClass: 'toast-top-right',
                preventDuplicates: true,
                onclick: null
            };
            var $toast = toastr[type](title, msg); // Wire up an event handler to a button in the toast, if it exists
            $toastlast = $toast;

            if (typeof $toast === 'undefined') {
                return;
            }
    }
    //$(document).ready(function () {
    //    if ($('#txtUserName').val() != '') {
    //        $('#txtPwd').focus();
    //    }
    //});

    var selectedType;
    $('#UserType').change(function () {
        selectedType = $(this).val();
        if (selectedType === 'Supplier') {
            $('#BuyerEmail').show();
        } else {
            $('#BuyerEmail').hide();
        }
    });

    document.getElementById('forgotPasswordLink').addEventListener('click', function (event) {
    // Prevent default link behavior
    event.preventDefault();

    // Get the email value from the login input field
    var email = document.getElementById('txtUserName').value;
        // Construct the Forgot Password URL with the correct base URL (replace 'ForgotPassword' with your actual action name)
        var forgotPasswordUrl = '@Url.Action("ForgotPassword", "Home")?Email=' + encodeURIComponent(email);

        // Open the Forgot Password page in a new tab with the constructed URL
        window.open(forgotPasswordUrl, '_blank');

});


    document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("container");
        const registerBtn = document.getElementById("register");
        const loginBtn = document.getElementById("login");

        registerBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            container.classList.add("active");
        });

        loginBtn.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            container.classList.remove("active");
        });
    });


    //$('#signIn').click(function () {
    //    debugger
    //    var email = $('#email').val();
    //    var password = $('#password').val();

    //    $.ajax({
    //        cache: false,
    //        type: 'POST',
    //        url: '/Home/Login',
    //        data: {
    //            email: email,
    //            password: password
    //        },
    //        dataType: 'json',
    //        success: function (data) {
    //            // Handle success response here
    //        },
    //        error: function (xhr, status, error) {
    //            // Handle error response here
    //            console.log(xhr.responseText);
    //        }
    //    });
    //});
   // $("#btnSend").attr("disabled", false).removeClass("forgotColor");


    function FieldsIsValid() {
        var _userName = $('#txtUserName').val();
        //var _ProgramId = $('#ProgramId').val();

        if (_userName.length == 0) {
            $('#lblMsgEmail').empty();
            $('#lblMsgEmail').append("Enter Userame");
            $('#lblMsgEmail').removeClass('SeaGreenColor');
            return false;
        }

        //if (_ProgramId.length == 0) {
        //    $('#lblMsgEmail').empty();
        //    $('#lblMsgEmail').append("Enter Vendor Id");
        //    $('#lblMsgEmail').removeClass('SeaGreenColor');
        //    return false;
        //}

        else {
            $('#lblMsgEmail').empty();
            return true;
        }
    }

    //$(".cancel").click(function () {
    //    $('#myModal').on('hidden.bs.modal', function () {
    //        $("#btnSend").attr("disabled", false).removeClass("forgotColor");


    //        $('#name').val('');
    //        //$('#ProgramId').val('');
    //        $('#name').empty();
    //        //$('#ProgramId').empty();
    //        $('#name').removeAttr('style');
    //        //$('#ProgramId').removeAttr('style');
    //        $('#lblMsgEmail').empty();
    //    })
    //});

    @*$("#btnSend").click(function () {

        var retVal = FieldsIsValid();

        if (retVal == true) {
            $("#btnSend").attr("disabled", true).addClass('forgotColor');
            $('#lblMsgEmail').empty();
            $('#name').text('');
            //$('#ProgramId').text('');
            var _userName = $('#name').val();
            //var _ProgramId = $('#ProgramId').val();

            var dateObj = new Date();
            var month = dateObj.getUTCMonth() + 1; //months from 1-12
            var day = dateObj.getUTCDate();
            var year = dateObj.getUTCFullYear();
            var time = dateObj.getHours() + ":" + dateObj.getMinutes() + ":" + dateObj.getSeconds();

            newdate = year + "/" + month + "/" + day + " " + time;

            $.ajax({
                type: 'GET',
                url: '@Url.Action("SendMail", "Home")',
                data: {
                    SignInId: _userName,
                    //ProgramId: _ProgramId,
                    requestedOn: newdate
                },
                datatype: JSON,
                success: function (data) {

                    $('#lblMsgEmail').empty();
                    if (data.EmailMessage == "Email sent.") {
                        $('#lblMsgEmail').append(data.EmailMessage);
                        $('#lblMsgEmail').addClass('SeaGreenColor');

                    }
                    else {
                        $('#lblMsgEmail').append(data.EmailMessage);
                        $('#lblMsgEmail').removeClass('SeaGreenColor');
                        $("#btnSend").attr("disabled", false).removeClass('forgotColor');
                    }
                }
            });
        }
    });*@
    function validateEmail(email) {
        // Regular expression for email validation
        var re = /^[a-zA-Z0-9._-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        return re.test(email);
    }
    function clearField() {
        $('#FirstName').val('');
        $('#LastName').val('');
        $('#email').val('');
        $('#Pwd').val('');
        $('#CnfrmPwd').val('');
        $('#BuyerEmail').val('');
    }


    ///Signup
$("#Signup").click(function () {
    var FirstName = $('#FirstName').val();
    var LastName = $('#LastName').val();
    var EmailAddress = $('#email').val();
    var Pwd = $('#Pwd').val();
    var CnfrmPwd = $('#CnfrmPwd').val();
    var Type = $('select#UserType option:selected').val();
    var BuyerEmail = $('#BuyerEmail').val();
    var captcha = $('#CaptchaInputText').val();

    if (captcha == "") {
        if (FirstName == '') {
            MsgToast("Error!", "FirstName is required", "error");
            return false;
        }
        else if (LastName == '') {
            MsgToast("Error!", "LastName is required", "error");
            return false;
        }
        else if (Type == '') {
            MsgToast("Error!", "Select User Type", "error");
            return false;
        }
        else if (EmailAddress == '') {
            MsgToast("Error!", "Email is required", "error");
            return false;
        }
        else if (Pwd == '') {
            MsgToast("Error!", "Password is required", "error");
            return false;
        }
        else if (CnfrmPwd == '') {
            MsgToast("Error!", "Confirm Password is required", "error");
            return false;
        }
        else if (Pwd != CnfrmPwd) {
            MsgToast("Error!", "Passwords do not match", "error");
            return false;
        }
        if (Type == 'Supplier') {
            if (BuyerEmail == '') {
                MsgToast("Error!", "Buyer email is required", "error");
                return false;
            }
            if (!validateEmail(BuyerEmail)) {
                MsgToast("Error!", "Buyer Email is incorrect", "error");
                return false;
            }
        }
        if (!validateEmail(EmailAddress)) {
            MsgToast("Error!", "Email is incorrect", "error");
            return false;
        }

        if (validateEmail(EmailAddress)) {
            if (FirstName != '' && LastName != "" && EmailAddress != "" && Pwd != "" && CnfrmPwd != "") {
                if (Type == "Supplier") {
                    if (BuyerEmail != "") {
                        if (!validateEmail(BuyerEmail)) {
                            return false;
                        }
                    }
                    else {
                        return false;
                    }
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("SignupVerification", "Home")',
                    data: {
                        FirstName: FirstName,
                        LastName: LastName,
                        EmailAddress: EmailAddress,
                        Pwd: Pwd,
                        CnfrmPwd: CnfrmPwd,
                        Type: Type,
                        BuyerEmail: BuyerEmail
                    },
                    datatype: JSON,
                    success: function (data) {
                        if (data.EmailMessage == "Sent") {
                            if (data.EmailMessageType == "Supplier") {
                                MsgToast("Success!", "Please wait for the buyer to verify your email", "success");
                                clearField();
                            }
                            else {
                                MsgToast("Success!", "Please wait for Admin to verify the email", "success");
                                clearField();
                            }
                        }
                        else {
                            // Email already exists
                            MsgToast("Oops!", "Email already exists", "error");
                            // Don't redirect to the login page
                            return;
                        }
                    }
                });
            }
        }
    }
    // Prevent default form submission behavior
    return false;
});



    $('#myModal').on('hidden.bs.modal', function () {
        $("#btnSend").attr("disabled", false).removeClass("forgotColor");

        $('#name').val('');
        //$('#ProgramId').val('');
        $('#name').empty();
        //$('#ProgramId').empty();
        $('#name').removeAttr('style');
        //$('#ProgramId').removeAttr('style');
        $('#lblMsgEmail').empty();

    })
     $("#btnSend").click(function () {


    });

</script>