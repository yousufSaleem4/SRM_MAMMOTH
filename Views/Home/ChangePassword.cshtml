@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@model PlusCP.Models.ChangePassword
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    string className = "optionMsg";
    if (ViewBag.ErrMessage == "Password has been reset.")
    {
        className = "optionMsgGreen";
        <script type="text/javascript">
            window.onload = function () {
                $("#lblMsg").html('@Html.Raw(ViewBag.ErrMessage)');
                $("#lblMsg").addClass("optionMsgGreen");
                //$("#MyPopup").modal("show");
                window.location.href = '@Url.Action("Logout","Home")';
            };

        
        </script>

    }
}
<link href="~/Content/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
<style>
    .label {
        padding-left: 20px;
        font-size: small;
    }

    .form-group {
        padding: 7px;
    }

    .modal-header1 {
        background-color: #325FAB;
        color: white;
        text-align: center;
    }

    .modal-header {
        background-color: #325FAB;
        color: white;
    }

    .button1 {
        background-color: #47AE50;
        color: white;
        border-radius: 3px;
        -webkit-box-shadow: none;
        box-shadow: none;
        border: 1px solid transparent;
        display: inline-block;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .modal-dialog1 {
        align-self: center;
        padding-top: 10%;
        padding-left: 40%;
    }

    .modal-content {
        overflow: visible;
    }

    .modal-body1 {
        overflow: auto;
    }
    body {
        /*margin-top: 20px;*/
        background: linear-gradient(to top, white, #D6EFE8);
    }
    /*body {
            /*background-color: darkslategray;
            color: lightslategray;
            overflow: hidden;
        }*/

    a {
        cursor: pointer;
    }

    .margin {
        margin: 4px;
        padding-top: 5px;
        color: white;
    }

    .modal-width {
        width: 80%;
        height: 80%;
        margin: 50px auto auto auto;
    }

    .modalcontent {
        height: 80%;
        border-radius: 0;
    }

    .logonUser {
        margin-top: 8px;
    }

    .settingIcon {
        margin-top: 2px;
    }

    .ribbon {
        background-color: black;
        color: white;
        text-align: center;
        vertical-align: middle;
    }

    .skins {
        margin-top: 5px;
        padding: 5px;
    }

    .blueBall {
        color: #3C8DBC
    }

    .greenBall {
        color: #00A65A
    }

    .redBall {
        color: #DD4B39
    }

    .yellowBall {
        color: #F39C12
    }

    .aquaBall {
        color: #00C0EF
    }

    .nav-padding-middle {
        padding-top: 8px;
    }

    .navbar-user-container {
        width: 100%;
    }

    .Menu {
        background-color: #47AE50;
        color: whitesmoke;
    }

    .SeaGreenColor {
        color: #00b3b3;
    }

    .green {
        color: #44B254;
    }

    #message {
        /*display: none;*/
        background: #f1f1f1;
        color: #000;
        position: relative;
        padding: 20px;
        margin-top: 10px;
    }

        #message p {
            padding: 7px 40px;
            font-size: 15px;
            font-family: "Helvetica Neue",Helvetica,Arial,sans-serif
        }

    /* Add a green text color and a checkmark when the requirements are right */
    .valid {
        color: green;
    }

        .valid:before {
            position: relative;
            left: -35px;
            content: "✔";
        }

    /* Add a red text color and an "x" when the requirements are wrong */
    .invalid {
        color: red;
    }

        .invalid:before {
            position: relative;
            left: -35px;
            content: "✖";
        }

    .optionMsgGreen {
        color: darkgreen !important;
    }

    /*.button {
        background-color: #47AE50;
        color: white;
        border-radius: 3px;
        -webkit-box-shadow: none;
        box-shadow: none;
        border: 1px solid transparent;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 2px;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .close {
        color: white;
    }*/
    .field-validation-error {
        color: Red;
    }

    .close {
        font-size: 30px;
        font-weight: 500;
        padding-left: 2px;
        color: #FFFFFF !important;
        text-shadow: #FFFFFF !important;
    }
    .btn-hover-save {
        background-color: #003B59; /* Default background color */
        border-color: #003B59; /* Default border color */
        color: #fff; /* Default text color */
    }

        .btn-hover-save:hover {
            background-color: transparent; /* Make background transparent on hover */
            border-color: #003B59; /* Dark border color on hover */
            color: #003B59; /* Dark font color on hover */
        }


    .btnClose {
        background-color: whitesmoke; /* Make background transparent on hover */
        color: #003B59; /* Dark font color on hover */
        transform: scale(1.05); /* Slightly scale up the card on hover */
    }

        .btnClose:hover {
            border: 1px solid #003B59; /* Thicker border with dark color on hover */
            color: #003B59; /* Dark font color on hover */
            transform: scale(1.05); /* Slightly scale up the card on hover */
            -webkit-box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* More pronounced shadow on hover */
            box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* More pronounced shadow on hover */
        }
</style>

<link href="~/Content/css/_all-skins.min.css" rel="stylesheet" />
<link href="~/Content/css/all.css" rel="stylesheet" />
<link href="~/Content/css/responsive-tables.min.css" rel="stylesheet" />
<link href="~/Content/css/Site.css" rel="stylesheet" />
<link href="~/Content/css/Standards.css" rel="stylesheet" />
<link href="~/Content/css/ionicons.min.css" rel="stylesheet" />



<body id="mainDiv">


    @using (Html.BeginForm("ChangePassword", "Home"))
    {
        @*<div id="MyPopup" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                &times;
                            </button>
                            <h4 class="modal-title">Note</h4>
                        </div>
                        <div class="modal-body">
                            <span id="lblMsg"></span>
                        </div>
                        <div class="modal-footer">
                            <input type="button" id="btnClosePopup" value="Ok" class="button" data-dismiss="modal" />
                        </div>
                    </div>
                </div>
            </div>*@


        @*<div class="box">*@
        <div id="parentDiv" class="container">
            <div id="dataList">
                <div class="row section-color">
                    <div class="box-header with-border" style="margin-top: 1px; margin-left: 1px; background-color: #003B59 ">
                        <button type="button" style="padding-top:3px; padding-right:4px;" onclick="pageRedirect()" class="close full-opacity-hover" data-dismiss="modal">&times;</button>

                        <h5 style="text-align:center !important;"><strong>Change Password</strong>  </h5>
                    </div>
                    <div class="col-md-12" style="background-color:white;">
                        <div class="box panel panel-default">
                            <div class="box-body">
                                <div class="col-md-4" style="background-color:white; margin-top:10px;">
                                    <div class="form-group">
                                        <div>
                                            @Html.LabelFor(model => model.oldPwd, new { @class = "col-4 col-form-label" })
                                            @Html.PasswordFor(model => model.oldPwd, htmlAttributes: new { @class = "form-control", @placeholder = "Old Password", @id = "oldPwd", onkeypress = "validatePassword()", data_val_required = true, MaxLength = "15" })
                                            @Html.ValidationMessageFor(model => model.oldPwd, "", new { @class = "redText" })

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div>
                                            @Html.LabelFor(model => model.newPwd, new { @class = "col-4 col-form-label" })
                                            @Html.PasswordFor(model => model.newPwd, htmlAttributes: new { @class = "form-control", @placeholder = "New Password", @id = "newPwd", onkeypress = "validatePassword()", data_val_required = true, MaxLength = "15" })
                                            @Html.ValidationMessageFor(model => model.newPwd, "", new { @class = "redText" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div>
                                            @Html.LabelFor(model => model.confirmPwd, new { @class = "col-4 col-form-label" })
                                            @Html.PasswordFor(model => model.confirmPwd, htmlAttributes: new { @class = "form-control", @placeholder = "Confirm Password", @id = "confirmPwd", onkeypress = "validatePassword()", data_val_required = true, MaxLength = "15" })
                                            @Html.ValidationMessageFor(model => model.confirmPwd, "", new { @class = "redText" })

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Captcha(5)

                                    </div>

                                    <div class="modal-footer" style="padding-right:5px;">
                                        <button type="button" onclick="pageRedirect()" id="cancel" class="btnClose" style="text-decoration:none;">Cancel</button>
                                        <button type="submit" class="btn-hover-save" id="btnDone">Submit</button>
                                    </div>
                                    <div class="label" style="text-align:center;">
                                        <label id="lblMsg" class="@className">
                                            @ViewBag.ErrMessage
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="showmessage" id="message">
                                        <h3>Password must contain the following:</h3>
                                        <p id="letter" class="invalid">A lowercase letter</p>
                                        <p id="capital" class="invalid">A capital (uppercase) letter</p>
                                        <p id="number" class="invalid">A number</p>
                                        <p id="length" class="invalid">Minimum 8 characters (Max 15)</p>
                                        <p id="specialChar" class="invalid">Special characters</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*</div>*@
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.js"></script>


    }
</body>
<script>
    function pageRedirect() {
        window.location.href = ("Login");
    } 
      //-----For Change Password-----//

        var isValidPwd;
        var isLowerCase;
        var isUpperCase;
        var isNumber;
        var isMaxLenth;
        var isSpecialChar;

        var letter = document.getElementById("letter");
        var capital = document.getElementById("capital");
        var number = document.getElementById("number");
        var length = document.getElementById("length");
        var specialChar = document.getElementById("specialChar");
        var newpwd = document.getElementById("newPwd");

        $("#newPwd").on('keypress', function () {
            if (event.keyCode == 32) {
                return false;
            }
        });

            $("#newPwd").on('keyup', function () {
            validatePassword();

        });
        function validatePassword() {
        // Validate lowercase letters
        var lowerCaseLetters = /[a-z]/g;
        if (newPwd.value.match(lowerCaseLetters)) {
            letter.classList.remove("invalid");
            letter.classList.add("valid");
            isLowerCase = true;
        } else {
            isLowerCase = false;
            letter.classList.remove("valid");
            letter.classList.add("invalid");
        }

        //  // Validate capital letters
        var upperCaseLetters = /[A-Z]/g;
        if (newPwd.value.match(upperCaseLetters)) {
            capital.classList.remove("invalid");
            capital.classList.add("valid");
            isUpperCase = true;
        } else {
            isUpperCase = false
            capital.classList.remove("valid");
            capital.classList.add("invalid");
        }

        // Validate numbers
        var numbers = /[0-9]/g;
        if (newPwd.value.match(numbers)) {
            number.classList.remove("invalid");
            number.classList.add("valid");
            isNumber = true;
        } else {
            isNumber = false;
            number.classList.remove("valid");
            number.classList.add("invalid");
        }

        // Validate length
        if (newPwd.value.length >= 8) {
            length.classList.remove("invalid");
            length.classList.add("valid");
            isMaxLenth = true;
        } else {
            isMaxLenth = false;
            length.classList.remove("valid");
            length.classList.add("invalid");
        }

        var specialChars = /[?=.*[!#$%&?@@]/;
        if (newPwd.value.match(specialChars)) {
            specialChar.classList.remove("invalid");
            specialChar.classList.add("valid");
            isSpecialChar = true;
        } else {
            isSpecialChar = false;
            specialChar.classList.remove("valid");
            specialChar.classList.add("invalid");
        }
    }

        function PasswordIsValid() {

            if (isLowerCase == false) {
                document.getElementById("message").style.display = "block";
                return false
            }

            if (isUpperCase == false) {
                document.getElementById("message").style.display = "block";
                return false
            }

            if (isNumber == false) {
                document.getElementById("message").style.display = "block";
                return false
            }

            if (isMaxLenth == false) {
                document.getElementById("message").style.display = "block";
                return false
            }
            if (isSpecialChar == false) {
                document.getElementById("message").style.display = "block";
                return false
            }

            var oldPwd = $('#oldPwd').val();
            var newPwd = $("#newPwd").val();
            var confirmPwd = $('#confirmPwd').val();

            if (newPwd == oldPwd) {
                $('#lblMsg').empty();
                $('#lblMsg').append('Old and new password cannot be same.');
                return false;
            }
            if (oldPwd.length == 0) {
                $('#lblMsg').empty();
                $('#lblMsg').append('Enter old password.');
                return false;
            }

            if (newPwd.length == 0) {
                $('#lblMsg').empty();
                $('#lblMsg').append('Enter new password.');
                return false;
            }

            if (confirmPwd.length == 0) {
                $('#lblMsg').empty();
                $('#lblMsg').append('Enter confirm password.');
                return false;
            }

            if (newPwd != confirmPwd) {
                $('#lblMsg').empty();
                $('#lblMsg').append('Password does not match.');
                return false;
            }

            return true;
        }

    @*$("#btnDone").click(function () {
            var retVal = PasswordIsValid();
            if (retVal == true) {
                var oldPwd = $('#oldPwd').val();
                var newPwd = $("#newPwd").val();
                var confirmPwd = $('#confirmPwd').val();

                $.ajax({
                    type: 'POST',
                    url: '/Home/ChangeNewPassword',
                    data: {
                        oldPwd: oldPwd, newPwd: newPwd, confirmPwd: confirmPwd,
                        recaptcha_challenge_field: $("#recaptcha_challenge_field").val()
                    },
                    success: function (data) {
                        debugger
                        if (data == 'Enter Captcha') {
                            $('#lblMsg').empty();
                            $('#lblMsg').append(data);
                            return;
                        }

                        $('#lblMsg').empty();
                        $('#oldPwd').val = '';
                        $("#newPwd").val = '';
                        $('#confirmPwd').val = '';
                        $('#lblMsg').append(data);
                        if (data == "Password has been reset.") {
                            $('#lblMsg').addClass('SeaGreenColor');
                            window.location.href = '@Url.Action("Logout","Home")';
                        }
                        else
                            $('#lblMsg').removeClass('SeaGreenColor');
                    },
                    fail: function () {
                        alert('fail');
                    },
                    error: function (r) {
                        alert('error');
                    }
                });
            }
        });*@

         //$(".btnClose").click(function () {

         //    $("#oldPwd").val('');
         //    $("#newPwd").val('');
         //    $("#confirmPwd").val('');
         //    $('#lblMsg').empty();
         //    validatePassword();
         //});



        //----END-----//
</script>
